// <auto-generated />
using System;
using ConsoleApp1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleApp1.Migrations
{
    [DbContext(typeof(ToyCompanyContext))]
    partial class CompanyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleApp1.Addresses", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ConsoleApp1.CustomerWithAddress", b =>
                {
                    b.Property<int>("CAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressesAddressID")
                        .HasColumnType("int");

                    b.Property<int?>("CustomersCustomerID")
                        .HasColumnType("int");

                    b.HasKey("CAId");

                    b.HasIndex("AddressesAddressID");

                    b.HasIndex("CustomersCustomerID");

                    b.ToTable("CustomerWithAddresses");
                });

            modelBuilder.Entity("ConsoleApp1.Customers", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ConsoleApp1.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerWithAddressCAId")
                        .HasColumnType("int");

                    b.Property<int>("Quantaty")
                        .HasColumnType("int");

                    b.Property<int?>("ToysToyId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerWithAddressCAId");

                    b.HasIndex("ToysToyId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ConsoleApp1.Plants", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlantName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlantId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("ConsoleApp1.Toys", b =>
                {
                    b.Property<int>("ToyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ToyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToyPrice")
                        .HasColumnType("int");

                    b.Property<int?>("TypeOfToyTypeId")
                        .HasColumnType("int");

                    b.HasKey("ToyId");

                    b.HasIndex("TypeOfToyTypeId");

                    b.ToTable("Toys");
                });

            modelBuilder.Entity("ConsoleApp1.TypeOfToy", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PlantsPlantId")
                        .HasColumnType("int");

                    b.Property<string>("ToyType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.HasIndex("PlantsPlantId");

                    b.ToTable("TypeOfToys");
                });

            modelBuilder.Entity("ConsoleApp1.CustomerWithAddress", b =>
                {
                    b.HasOne("ConsoleApp1.Addresses", "Addresses")
                        .WithMany("CustomerWithAddresses")
                        .HasForeignKey("AddressesAddressID");

                    b.HasOne("ConsoleApp1.Customers", "Customers")
                        .WithMany("CustomerWithAddresses")
                        .HasForeignKey("CustomersCustomerID");

                    b.Navigation("Addresses");

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("ConsoleApp1.Orders", b =>
                {
                    b.HasOne("ConsoleApp1.CustomerWithAddress", "CustomerWithAddress")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerWithAddressCAId");

                    b.HasOne("ConsoleApp1.Toys", "Toys")
                        .WithMany("Orders")
                        .HasForeignKey("ToysToyId");

                    b.Navigation("CustomerWithAddress");

                    b.Navigation("Toys");
                });

            modelBuilder.Entity("ConsoleApp1.Toys", b =>
                {
                    b.HasOne("ConsoleApp1.TypeOfToy", "TypeOfToy")
                        .WithMany("Toys")
                        .HasForeignKey("TypeOfToyTypeId");

                    b.Navigation("TypeOfToy");
                });

            modelBuilder.Entity("ConsoleApp1.TypeOfToy", b =>
                {
                    b.HasOne("ConsoleApp1.Plants", "Plants")
                        .WithMany("TypeOfToys")
                        .HasForeignKey("PlantsPlantId");

                    b.Navigation("Plants");
                });

            modelBuilder.Entity("ConsoleApp1.Addresses", b =>
                {
                    b.Navigation("CustomerWithAddresses");
                });

            modelBuilder.Entity("ConsoleApp1.CustomerWithAddress", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ConsoleApp1.Customers", b =>
                {
                    b.Navigation("CustomerWithAddresses");
                });

            modelBuilder.Entity("ConsoleApp1.Plants", b =>
                {
                    b.Navigation("TypeOfToys");
                });

            modelBuilder.Entity("ConsoleApp1.Toys", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ConsoleApp1.TypeOfToy", b =>
                {
                    b.Navigation("Toys");
                });
#pragma warning restore 612, 618
        }
    }
}
