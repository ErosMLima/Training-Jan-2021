// <auto-generated />
using System;
using Assignement_2_.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignement_2_.Migrations
{
    [DbContext(typeof(BrainsmithContext))]
    [Migration("20210421120214_updating-sp")]
    partial class updatingsp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignement_2_.Models.Categories", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ManufacturingPlantID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Assignement_2_.Models.Customers", b =>
                {
                    b.Property<int>("CId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Assignement_2_.Models.OrderedItems", b =>
                {
                    b.Property<int>("OrderedItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int?>("OrdersOrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ToysID")
                        .HasColumnType("int");

                    b.HasKey("OrderedItemId");

                    b.HasIndex("OrdersOrderID");

                    b.HasIndex("ToysID");

                    b.ToTable("OrderedItems");
                });

            modelBuilder.Entity("Assignement_2_.Models.Orders", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomersCId")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomersCId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Assignement_2_.Models.Plants", b =>
                {
                    b.Property<int>("ManufacuringPlantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManufacuringPlantID");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("Assignement_2_.Models.ShipAddresses", b =>
                {
                    b.Property<int>("ShipID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.HasKey("ShipID");

                    b.HasIndex("CustomerID");

                    b.ToTable("ShipAddresses");
                });

            modelBuilder.Entity("Assignement_2_.Models.Toys", b =>
                {
                    b.Property<int>("ToyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriesCategoryID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ToyID");

                    b.HasIndex("CategoriesCategoryID");

                    b.ToTable("Toys");
                });

            modelBuilder.Entity("Assignement_2_.Models.OrderedItems", b =>
                {
                    b.HasOne("Assignement_2_.Models.Orders", null)
                        .WithMany("OrderedItems")
                        .HasForeignKey("OrdersOrderID");

                    b.HasOne("Assignement_2_.Models.Toys", "Toys")
                        .WithMany()
                        .HasForeignKey("ToysID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Toys");
                });

            modelBuilder.Entity("Assignement_2_.Models.Orders", b =>
                {
                    b.HasOne("Assignement_2_.Models.Customers", null)
                        .WithMany("Orders")
                        .HasForeignKey("CustomersCId");
                });

            modelBuilder.Entity("Assignement_2_.Models.ShipAddresses", b =>
                {
                    b.HasOne("Assignement_2_.Models.Customers", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Assignement_2_.Models.Toys", b =>
                {
                    b.HasOne("Assignement_2_.Models.Categories", "Categories")
                        .WithMany("Toys")
                        .HasForeignKey("CategoriesCategoryID");

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Assignement_2_.Models.Categories", b =>
                {
                    b.Navigation("Toys");
                });

            modelBuilder.Entity("Assignement_2_.Models.Customers", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Assignement_2_.Models.Orders", b =>
                {
                    b.Navigation("OrderedItems");
                });
#pragma warning restore 612, 618
        }
    }
}
