// <auto-generated />
using System;
using Day12_13Assignment.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Day12_13Assignment.Migrations
{
    [DbContext(typeof(ToyCompanyDBContext))]
    [Migration("20210420130825_uspGetToyInfo")]
    partial class uspGetToyInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Day12_13Assignment.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Contact")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.ManufacturingPlant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManufacturingPlants");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.ManufacturingPlantToy", b =>
                {
                    b.Property<int>("ManufacturingPlantId")
                        .HasColumnType("int");

                    b.Property<int>("ToyId")
                        .HasColumnType("int");

                    b.HasKey("ManufacturingPlantId", "ToyId");

                    b.HasIndex("ToyId");

                    b.ToTable("ManufacturingPlantToys");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ToyId")
                        .HasColumnType("int");

                    b.Property<int>("ShipToId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<decimal>("ToBePaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ToyId", "ShipToId");

                    b.HasIndex("ShipToId");

                    b.HasIndex("ToyId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.ShipTo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("ShipTos");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.Toy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("ToyCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ToyCategoryId");

                    b.ToTable("Toys");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.ToyCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ToyCategories");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.ManufacturingPlantToy", b =>
                {
                    b.HasOne("Day12_13Assignment.Models.ManufacturingPlant", "ManufacturingPlant")
                        .WithMany("ManufacturingPlantToys")
                        .HasForeignKey("ManufacturingPlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Day12_13Assignment.Models.Toy", "Toy")
                        .WithMany("ManufacturingPlantToys")
                        .HasForeignKey("ToyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManufacturingPlant");

                    b.Navigation("Toy");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.Order", b =>
                {
                    b.HasOne("Day12_13Assignment.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.OrderDetail", b =>
                {
                    b.HasOne("Day12_13Assignment.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Day12_13Assignment.Models.ShipTo", "ShipTo")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ShipToId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Day12_13Assignment.Models.Toy", "Toy")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ToyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ShipTo");

                    b.Navigation("Toy");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.ShipTo", b =>
                {
                    b.HasOne("Day12_13Assignment.Models.Customer", "Customer")
                        .WithMany("ShipTos")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.Toy", b =>
                {
                    b.HasOne("Day12_13Assignment.Models.ToyCategory", "ToyCategory")
                        .WithMany("Toys")
                        .HasForeignKey("ToyCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToyCategory");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ShipTos");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.ManufacturingPlant", b =>
                {
                    b.Navigation("ManufacturingPlantToys");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.ShipTo", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.Toy", b =>
                {
                    b.Navigation("ManufacturingPlantToys");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Day12_13Assignment.Models.ToyCategory", b =>
                {
                    b.Navigation("Toys");
                });
#pragma warning restore 612, 618
        }
    }
}
