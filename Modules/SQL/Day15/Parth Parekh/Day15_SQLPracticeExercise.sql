-- Implicit Transaction
SET IMPLICIT_TRANSACTIONS ON
INSERT INTO Emp VALUES (8 , 'P') 
INSERT INTO Emp VALUES (9 , 'r') 
SELECT @@TRANCOUNT -- It Count the total transaction 
COMMIT TRANSACTION

SET IMPLICIT_TRANSACTIONS OFF
SELECT  * FROM Emp

-- Explicit Transaction
-- Example 1
BEGIN TRAN  myTran
UPDATE FixedDepositAccount
SET Balance = Balance - 25000
WHERE AccountName = 'John'

UPDATE SavingAccount
SET Balance = Balance + 25000
WHERE AccountName = 'John'
COMMIT TRAN myTran

-- Example 2
BEGIN TRANSACTION;  
DELETE FROM HumanResources.JobCandidate  
    WHERE JobCandidateID = 13;  
COMMIT;

-- ROLLBACK
  -- Example 1
CREATE TABLE ValueTable (id INT);  
BEGIN TRANSACTION;  
       INSERT INTO ValueTable VALUES(1);  
       INSERT INTO ValueTable VALUES(2);  
ROLLBACK;  -- It Rollback the transaction 
SELECT * FROM ValueTable

  -- Example 2
BEGIN TRANSACTION TR1
BEGIN TRY
		UPDATE Emp SET EmpID = 5 WHERE EmpID = 9
		UPDATE Sal SET Salary = 10000 WHERE EmpID = 5
		COMMIT TRANSACTION TR1
		SELECT 'Transaction Executed'
END TRY
BEGIN CATCH 
		ROLLBACK TRANSACTION TR1
		SELECT 'Transaction Rollbacked' , ERROR_LINE() ,ERROR_MESSAGE()
END CATCH

-- Impliment Isolation Level
SET TRANSACTION ISOLATION LEVEL
READ COMMITTED
BEGIN TRANSACTION TR1
BEGIN TRY
		UPDATE Emp SET EmpID = 5 WHERE EmpID = 9
		UPDATE Sal SET Salary = 10000 WHERE EmpID = 5
		COMMIT TRANSACTION TR1
		SELECT 'Transaction Executed'
END TRY
BEGIN CATCH 
		ROLLBACK TRANSACTION TR1
		SELECT 'Transaction Rollbacked' , ERROR_LINE() ,ERROR_MESSAGE()
END CATCH

-- READ UNCOMMITTED
BEGIN TRANSACTION TR1		
UPDATE Sal SET Salary = 110 WHERE EmpID = 5
COMMIT TRANSACTION TR1

-- Write This in New Query
SET TRANSACTION ISOLATION LEVEL
READ UNCOMMITTED
SELECT * FROM Sal WHERE EmpID = 5		

-- REPEATABLE READ
BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL
REPEATABLE READ
SELECT * FROM Emp WHERE EmpID = 1
ROLLBACK TRANSACTION

-- Write this in New Query
BEGIN TRAN
UPDATE Emp SET Name = 'RoY' WHERE EmpID = 1
COMMIT TRAN

-- SERIALIZABLE
BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL
SERIALIZABLE 
SELECT * FROM Emp WHERE EmpID = 1
ROLLBACK TRANSACTION

-- Write this in New Query
BEGIN TRAN
UPDATE Emp SET Name = 'JASON' WHERE EmpID = 3
COMMIT TRAN

-- SNAPSHOT 
ALTER DATABASE learningSQL SET ALLOW_SNAPSHOT_ISOLATION ON;
BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL
SNAPSHOT
SELECT * FROM Emp WHERE EmpID = 1
ROLLBACK TRANSACTION

-- Write this in New Query
UPDATE Emp SET Name = 'Parth' WHERE EmpID = 1
SELECT * FROM Emp WHERE EmpID = 1


-- TO See ISOLATION LEVEL
SELECT CASE transaction_isolation_level
WHEN 0 THEN 'Unspecified'
WHEN 1 THEN 'ReadUncommitted'
WHEN 2 THEN 'ReadCommitted'
WHEN 3 THEN 'Repeatable'
WHEN 4 THEN 'Serializable'
WHEN 5 THEN 'Snapshot' END AS TRANSACTION_ISOLATION_LEVEL
FROM sys.dm_exec_sessions
where session_id = @@SPID

	
